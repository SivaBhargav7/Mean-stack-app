name: CI-CD Pipeline

on:
  push:
    branches:
      - main

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build & Push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/mean-backend:latest
            ${{ env.DOCKERHUB_USERNAME }}/mean-backend:${{ github.sha }}

      - name: Build & Push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/mean-frontend:latest
            ${{ env.DOCKERHUB_USERNAME }}/mean-frontend:${{ github.sha }}

      - name: Deploy to VM via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: ${{ secrets.VM_PORT || 22 }}
          script: |
            set -e
            sudo mkdir -p /opt/mean-app
            sudo chown $USER:$USER /opt/mean-app || true
            cd /opt/mean-app
            
            # Create docker-compose.yml file
            cat > docker-compose.yml << 'EOF'
            version: "3.9"
            services:
              mongo:
                image: mongo:6
                container_name: mongo
                restart: unless-stopped
                ports:
                  - "27017:27017"
                volumes:
                  - mongo_data:/data/db

              backend:
                image: ${{ secrets.DOCKERHUB_USERNAME }}/mean-backend:latest
                container_name: backend
                restart: unless-stopped
                environment:
                  - MONGO_URI=mongodb://mongo:27017/meanapp
                  - PORT=3000
                depends_on:
                  - mongo

              frontend:
                image: ${{ secrets.DOCKERHUB_USERNAME }}/mean-frontend:latest
                container_name: frontend
                restart: unless-stopped
                ports:
                  - "80:80"
                depends_on:
                  - backend

            volumes:
              mongo_data:
            EOF

            docker compose pull
            docker compose up -d --remove-orphans
